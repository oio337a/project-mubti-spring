################
# <타입> : <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지
# 제목의 첫 글자는 반드시 대문자로 작성
# 과거 시제를 사용하지 않고 명령조로 작성
# 제목이나 본문에 이슈 번호(가 있다면) 붙여야 함
# 예) Feat : 로그인 기능 추가

# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

################
# 본문(구체적인 내용)을 아랫줄에 작성
# 선택 사항이기에 모든 commit에 본문 내용을 작성할 필요는 없음
# 어떻게(How)보다 무엇을, 왜(What, Why)에 맞춰 작성
# 설명뿐만 아니라, commit의 이유를 작성할 때에도 씀
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

###############
# 꼬릿말(footer)을 아랫줄에 작성
# 선택 사항이므로 모든 commit에 꼬리말을 작성할 필요는 없음
# 해결: 이슈 해결 시 사용
# 관련: 해당 commit에 관련된 이슈 번호
# 참고: 참고할 이슈가 있는 경우 사용
# 예) 해결: #123

################
# feat : 새로운 기능에 대한 커밋
# fix : 버그 수정에 대한 커밋
# build : 빌드 관련 파일 수정에 대한 커밋
# chore : 그 외 자잘한 수정에 대한 커밋
# ci : CI관련 설정 수정에 대한 커밋
# docs : 문서 수정에 대한 커밋
# style : 코드 스타일 혹은 포맷 등에 관한 커밋
# refactor :  코드 리팩토링에 대한 커밋
# test : 테스트 코드 수정에 대한 커밋
################
